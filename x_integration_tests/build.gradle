dependencies {
    testCompile(
        'junit:junit:4.11',
        'org.fluentlenium:fluentlenium-core:0.10.3',
        'org.fluentlenium:fluentlenium-assertj:0.10.3'
    )
}

test.dependsOn(
    ':applications/core:build',
    ':applications/core:war',
    ':applications/core:integrationTomcatRunWar'
)

test.doFirst {
    println "Waiting on server..."
    Thread.sleep(3000) // ensure the server has been stopped before our first getHealth

    def attempts = 0;
    def maxAttempts = 120;
    def getHealth = {
        try {
            return "http://127.0.0.1:8080/applications/core/health".toURL().getText()
        } catch (Exception e) {
            return ""
        }
    }
    while (! getHealth().contains("OK")) {
        println 'Attempt ' + attempts
        attempts ++;
        Thread.sleep(1000)
        if (attempts >= maxAttempts) {
            throw new GradleException("Timeout waiting for server to be up.")
        }
    }

    println "Running tests..."
}